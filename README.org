* emacs-maple-scratch
  Show recent files and projects in scratch buffer.

** screenshots
   [[https://github.com/honmaple/emacs-maple-scratch/blob/master/screenshot/example.png]]
   [[https://github.com/honmaple/emacs-maple-scratch/blob/master/screenshot/example1.png]]
   
** usage
   #+begin_src elisp
     (setq initial-scratch-message "")

     (use-package maple-scratch
       :ensure nil
       :hook (window-setup . maple-scratch-init)
       :config
       (setq maple-scratch-source nil
             maple-scratch-number 5
             maple-scratch-center t
             maple-scratch-empty t
             maple-scratch-anywhere nil
             maple-scratch-write-mode 'emacs-lisp-mode
             maple-scratch-items '(maple-scratch-banner
                                   maple-scratch-navbar
                                   maple-scratch-default
                                   maple-scratch-startup)
             maple-scratch-alist
             (append (butlast maple-scratch-alist)
                     '(("Init"
                        :action 'maple/open-init-file
                        :desc "Open Init File")
                       ("Test"
                        :action 'maple/open-test-file
                        :desc "Open Test File"))
                     (last maple-scratch-alist)))

       (setq maple-scratch-banner
             '(" _______  _______  _______  _        _______"
               "(       )(  ___  )(  ____ )( \\      (  ____ \\"
               "| () () || (   ) || (    )|| (      | (    \\/"
               "| || || || (___) || (____)|| |      | (__"
               "| |(_)| ||  ___  ||  _____)| |      |  __)"
               "| |   | || (   ) || (      | |      | ("
               "| )   ( || )   ( || )      | (____/\\| (____/\\"
               "|/     \\||/     \\||/       (_______/(_______/"))

       (setq maple-scratch-navbar-alist
             '(("HOME"
                :action (lambda() (find-file (expand-file-name "init.el" user-emacs-directory)))
                :desc "Browse home")
               ("CAPTURE"
                :action 'org-capture
                :desc "Open Org Capture")
               ("AGENDA"
                :action 'org-agenda
                :desc "Open Org Agenda")
               ("HELP"
                :action (lambda() (find-file (expand-file-name "README.org" user-emacs-directory)))
                :desc "Emacs Help"))))
   #+end_src

